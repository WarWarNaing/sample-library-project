@model DAL.Model.Car

<form id="ModuleForm" method="Post">
    <div class="modal-header bg-blue">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="glyphicon glyphicon-remove-sign"></i></button>
        <h4 class="modal-title">
            <i class="glyphicon glyphicon-plus"></i>&nbsp;&nbsp; Add New Car
        </h4>
    </div>
    @Html.HiddenFor(m => m.CarId)
    <div class="modal-body" id="mb">
        <div class="row">
            <div class="col-sm-12">
                <div class="col-sm-12">
                    <div id="dvPreview">
                        @{
                            if (Model.Image != null)
                            {
                                foreach (var image in Model.Image.Split('_'))
                                {
                                    if (image != "")
                                    {
                                        <img src="@image" style="width: 80px; height: 80px;border-radius:10px" />
                                    }
                                }
                            }
                        }
                    </div>
                    <input type="file" multiple id="filearticle" class="form-control mt-20" name="" accept="image/jpeg, image/png" onchange="ShowImagePreviewArticle(this)" />
                    <input type="hidden" name="Image" id="photo_article" value="@Model.Image" />
                </div>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-sm-12">
                <div class="col-sm-6">
                    <label>Brand</label>&nbsp;<span class="text-danger">*</span>
                    @{ var brand = new List<SelectListItem>() {
                                                                                                                new SelectListItem {Value="", Text="--- Select ---" },
                                                                                                                new SelectListItem {Value="Audi", Text="Audi" },
                                                                                                                new SelectListItem {Value="jaguar", Text="jaguar" },
                                                                                                                new SelectListItem {Value="Land rover", Text="Land rover" },
                                                                                                                new SelectListItem {Value="Renault", Text="Renault" }
                                                                                                            };
                    }
                    @Html.DropDownListFor(Model => Model.Brand, brand, new { @class = "form-control", name = "select", required = "required" })
                </div>
                <div class="col-sm-6">
                    <label>Class</label>&nbsp;<span class="text-danger">*</span>
                    @{ var type = new List<SelectListItem>() {
                                                                                                                new SelectListItem {Value="", Text="--- Select ---" },
                                                                                                                new SelectListItem {Value="A-Class", Text="A-Class" },
                                                                                                                new SelectListItem {Value="B-Class", Text="B-Class" },
                                                                                                                new SelectListItem {Value="C-Class", Text="C-Class" }
                                                                                                            };
                    }
                    @Html.DropDownListFor(Model => Model.Class, type, new { @class = "form-control", name = "select", required = "required" })
                </div>
            </div><br />

            <div class="col-sm-12">
                <div class="col-sm-6">
                    <label>ModelName</label>&nbsp;<span class="text-danger">*</span>
                    @Html.TextBoxFor(m => m.ModelName, new { type = "text", @class = "form-control", required = "required", autocomplete = "off" })
                </div>
                <div class="col-sm-6">
                    <label>ModelCode</label>&nbsp;<span class="text-danger">*</span>
                    @Html.TextBoxFor(m => m.ModelCode, new { type = "text", @class = "form-control", required = "required" })
                </div>
            </div><br />

            <div class="col-sm-12">
                <div class="col-sm-6">
                    <label>Price</label>&nbsp;<span class="text-danger">*</span>
                    @Html.TextBoxFor(m => m.Price, new { type = "number", @class = "form-control", required = "required" })
                </div>
                <div class="col-sm-6">
                    @if (@Model.DateofManufacturing != null)
                    {
                        <label>Date Of Manufacturing</label><span class="text-danger">*</span>
                        <div class="input-group" style="margin-right:90px;">
                            <input type="text" class="form-control DOM_Form" id="" name="DateofManufacturing" value="@Model.DateofManufacturing.ToString("dd MMMM, yyy")" autocomplete="off" required>
                            <span class="input-group-addon"><i class="icon-calendar22"></i></span>
                        </div>
                    }
                    else
                    {
                        <label>Date Of Manufacturing</label><span class="text-danger">*</span>
                        <div class="input-group" style="margin-right:90px;">
                            <input type="text" class="form-control DOB_Form" id="DOBform" name="DateofManufacturing" autocomplete="off" required>
                            <span class="input-group-addon"><i class="icon-calendar22"></i></span>
                        </div>
                    }
                </div>
            </div><br />

            <div class="row">
                <div class="col-sm-12">
                    <div class="col-sm-12">
                        <label>Description</label><span class="text-danger">*</span>
                        @Html.TextAreaFor(m => m.Description, new { @id = "Description", @class = "form-control", @row = "200", required = "required" })
                    </div>
                </div>
            </div><br />

            <div class="row">
                <div class="col-sm-12">
                    <div class="col-sm-12">
                        <label>Features</label><span class="text-danger">*</span>
                        @Html.TextAreaFor(m => m.Features, new { @id = "Features", @class = "form-control", @row = "200", required = "required" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="glyphicon glyphicon-remove-circle"></i>&nbsp;Cancel</button>
                <button type="submit" class="btn btn-primary btn-rounded" id="ajax_method"><span class="icon-add"></span> Save</button>
            </div>
        </div>
    </div>
</form>